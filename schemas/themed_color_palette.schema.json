{
  "$defs": {
    "brightness": {
      "enum": [
        "dark",
        "light"
      ]
    },
    "collectionOrItem": {
      "properties": {
        ".deprecated": {
          "description": "If specified, the value will have a @Deprecated decorator with the given deprecation message.",
          "type": "string"
        },
        ".description": {
          "description": "The description of the object",
          "type": "string"
        },
        ".flutter": {
          "description": "If specified, the generated property will be private. So you can use it to create the flutter theme. But it won't be accessible in the code.",
          "type": "string"
        },
        ".platforms": { // Look at "dependencies" to force to the be from the same list as the specified ones at the root.
          "description": "The platforms the item will be accessible on. By default, the item will be accessible on all the platforms of the parent. The root item is available on all platforms by default.",
          "items": {
            "data": {
              "enum": "/properties/.platforms"
            },
            "enum": "#/properties/.platforms"
          },
          "minItems": 1,
          "type": "array",
          "uniqueItems": true
        }
      }
    },
    "color": {
      "pattern": "^[a-fA-F0-9]{8}$",
      "type": "string"
    },
    "fontWeight": {
      "enum": [
        "100",
        "thin",
        "200",
        "extraLight",
        "300",
        "light",
        "400",
        "medium",
        "500",
        "normal",
        "regular",
        "plain",
        "600",
        "semiBold",
        "700",
        "bold",
        "800",
        "extraBold",
        "900",
        "black"
      ]
    },
    "item": {
      "$ref": "#/$defs/collectionOrItem",
      "properties": {
        ".type": {
          "$ref": "#/$defs/itemType"
        },
        "description": "A shared or themed item"
      },
      "required": [
        ".type"
      ],
      "type": "object"
    },
    "itemType": {
      "description": "The type of the object",
      "enum": [
        "int",
        "double",
        "color",
        "fontWeight",
        "bool",
        "brightness"
      ]
    },
    "sharedCollection": {
      "$ref": "#/$defs/collectionOrItem",
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][a-zA-Z0-9]*$": {
          "oneOf": [
            {
              "$ref": "#/$defs/sharedItem"
            },
            {
              "$ref": "#/$defs/sharedCollection"
            }
          ]
        }
      },
      "type": "object"
    },
    "sharedItem": {
      "allOf": [
        {
          "$ref": "#/$defs/item"
        }
      ],
      "description": "A shared item",
      "oneOf": [
        {
          "properties": {
            ".type": {
              "const": "double"
            },
            ".value": {
              "type": "number"
            }
          }
        },
        {
          "properties": {
            ".type": {
              "const": "int"
            },
            ".value": {
              "type": "integer"
            }
          }
        },
        {
          "properties": {
            ".type": {
              "const": "color"
            },
            ".value": {
              "$ref": "#/$defs/color"
            }
          }
        },
        {
          "properties": {
            ".type": {
              "const": "fontWeight"
            },
            ".value": {
              "#ref": "#/$defs/fontWeight"
            }
          }
        },
        {
          "properties": {
            ".type": {
              "const": "bool"
            },
            ".value": {
              "type": "boolean"
            }
          }
        },
        {
          "properties": {
            ".type": {
              "const": "brightness"
            },
            ".value": {
              "$ref": "#/$defs/brightness"
            }
          }
        }
      ],
      "properties": {
        ".value": {
          "description": "The value of the object"
        }
      },
      "required": [
        ".value"
      ],
      "type": "object"
    }
  },
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "The schema of the yaml theme",
  "properties": {
    ".description": {
      "type": "string"
    },
    ".name": {
      "description": "The name of the main class created by the code generation that will contain all the properties of themed color palette. It should be in camelCase.",
      "pattern": "^[a-z][a-zA-Z0-9]*$",
      "type": "string"
    },
    ".platforms": {
      "items": {
        "description": "The different platforms that the theme is available on. It should be in camelCase.",
        "pattern": "^[a-z][a-zA-Z0-9]*$",
        "type": "string",
        "uniqueItems": true
      },
      "minItems": 1,
      "type": "array",
      "uniqueItems": true
    },
    ".shared": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/$defs/sharedCollection"
        }
      ],
      "description": "The shared values are constants independent of the theme. To import those values, you need to prefix the import with `.shared`",
      "patternProperties": {
        "^[a-z][a-zA-Z0-9]*$": {
          "type": "object"
        }
      }
    },
    ".themes": {
      "description": "The list of themes that are supported. The first one is the default theme and needs to be specified in each and every themed objects. If a theme is not specified for an object, it will use the value/logic of the default theme.",
      "items": {
        "pattern": "^[a-z][a-zA-Z0-9]*$",
        "type": "string",
        "uniqueItems": true
      },
      "type": "array"
    },
    ".version": {
      "default": "1.0.0",
      "description": "The version of the theme",
      "type": "string"
    },
    "test0": {
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "test1": {
      "data": {
        "enum": "#/test0"
      },
      "type": "string"
    }
  },
  "required": [
    ".themes",
    ".name"
  ],
  "title": "Yaml theme schema",
  "type": "object"
}
